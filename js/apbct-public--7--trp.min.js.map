{"version":3,"names":[],"mappings":"","sources":["apbct-public--7--trp.js"],"sourcesContent":["document.addEventListener('DOMContentLoaded', function() {\n    let ctTrpLocalize = undefined;\n    let ctTrpIsAdminCommentsList = false;\n\n    if ( typeof ctPublic !== 'undefined' || typeof ctTrpAdminLocalize !== 'undefined' ) {\n        if ( typeof ctPublic !== 'undefined' && ctPublic.theRealPerson ) {\n            ctTrpLocalize = ctPublic.theRealPerson;\n        }\n        if (\n            typeof ctTrpLocalize === 'undefined' &&\n            typeof ctTrpAdminLocalize !== 'undefined' &&\n            ctTrpAdminLocalize.theRealPerson\n        ) {\n            ctTrpLocalize = ctTrpAdminLocalize.theRealPerson;\n            ctTrpIsAdminCommentsList = true;\n        }\n    }\n\n    if ( ! ctTrpLocalize ) {\n        return;\n    }\n\n    // Selectors. Try to handle the WIDE range of themes.\n    let themesCommentsSelector = '.apbct-trp *[class*=\"comment-author\"]';\n    if ( document.querySelector('.apbct-trp .comment-author .comment-author-link') ) {\n        // For Spacious theme\n        themesCommentsSelector = '.apbct-trp *[class*=\"comment-author-link\"]';\n    }\n    let woocommerceReviewsSelector = '.apbct-trp *[class*=\"review__author\"]';\n    let adminCommentsListSelector = '.apbct-trp td[class*=\"column-author\"] > strong';\n    const trpComments = document.querySelectorAll(\n        themesCommentsSelector + ',' +\n        woocommerceReviewsSelector + ',' +\n        adminCommentsListSelector);\n\n    if ( trpComments.length === 0 ) {\n        return;\n    }\n\n    trpComments.forEach(( element, index ) => {\n        // Exceptions for items that are included in the selection\n        if (\n            typeof pagenow == 'undefined' &&\n            element.parentElement.className.indexOf('group') < 0 &&\n            element.tagName != 'DIV'\n        ) {\n            return;\n        }\n\n        let trpLayout = document.createElement('div');\n        trpLayout.setAttribute('class', 'apbct-real-user-badge');\n\n        let trpImage = document.createElement('img');\n        trpImage.setAttribute('src', ctTrpLocalize.imgPersonUrl);\n        trpImage.setAttribute('class', 'apbct-real-user-popup-img');\n\n        let trpDescription = document.createElement('div');\n        trpDescription.setAttribute('class', 'apbct-real-user-popup');\n\n        let trpDescriptionHeading = document.createElement('p');\n        trpDescriptionHeading.setAttribute('class', 'apbct-real-user-popup-header');\n        trpDescriptionHeading.append(ctTrpLocalize.phrases.trpHeading);\n\n        let trpDescriptionContent = document.createElement('div');\n        trpDescriptionContent.setAttribute('class', 'apbct-real-user-popup-content_row');\n\n        let trpDescriptionContentSpan = document.createElement('span');\n        trpDescriptionContentSpan.append(ctTrpLocalize.phrases.trpContent1 + ' ');\n        trpDescriptionContentSpan.append(ctTrpLocalize.phrases.trpContent2);\n\n        if ( ctTrpIsAdminCommentsList ) {\n            let learnMoreLink = document.createElement('a');\n            learnMoreLink.setAttribute('href', ctTrpLocalize.trpContentLink);\n            learnMoreLink.setAttribute('target', '_blank');\n            learnMoreLink.text = ctTrpLocalize.phrases.trpContentLearnMore;\n            trpDescriptionContentSpan.append(' '); // Need one space\n            trpDescriptionContentSpan.append(learnMoreLink);\n        }\n\n        trpDescriptionContent.append(trpDescriptionContentSpan);\n        trpDescription.append(trpDescriptionHeading, trpDescriptionContent);\n        trpLayout.append(trpImage);\n        element.append(trpLayout);\n        element.append(trpDescription);\n    });\n\n    const badges = document.querySelectorAll('.apbct-real-user-badge');\n\n    badges.forEach((badge) => {\n        let hideTimeout = undefined;\n\n        this.body.addEventListener('click', function(e) {\n            if (\n                e.target.className.indexOf('apbct-real-user') == -1 &&\n                e.target.parentElement.className.indexOf('apbct-real-user') == -1\n            ) {\n                closeAllPopupTRP();\n            }\n        });\n\n        badge.addEventListener('click', function() {\n            const popup = this.nextElementSibling;\n            if (popup && popup.classList.contains('apbct-real-user-popup')) {\n                popup.classList.toggle('visible');\n            }\n        });\n\n        badge.addEventListener('mouseenter', function() {\n            closeAllPopupTRP();\n            const popup = this.nextElementSibling;\n            if (popup && popup.classList.contains('apbct-real-user-popup')) {\n                popup.classList.add('visible');\n            }\n        });\n\n        badge.addEventListener('mouseleave', function() {\n            hideTimeout = setTimeout(() => {\n                const popup = this.nextElementSibling;\n                if (popup && popup.classList.contains('apbct-real-user-popup')) {\n                    popup.classList.remove('visible');\n                }\n            }, 1000);\n        });\n\n        const popup = badge.nextElementSibling;\n        popup.addEventListener('mouseenter', function() {\n            clearTimeout(hideTimeout);\n            popup.classList.add('visible');\n        });\n\n        popup.addEventListener('mouseleave', function() {\n            hideTimeout = setTimeout(() => {\n                if (popup.classList.contains('apbct-real-user-popup')) {\n                    popup.classList.remove('visible');\n                }\n            }, 1000);\n        });\n\n        // For mobile devices\n        badge.addEventListener('touchend', function() {\n            hideTimeout = setTimeout(() => {\n                const popup = this.nextElementSibling;\n                const selection = window.getSelection();\n                // Check if no text is selected\n                if (popup && selection && popup.classList.contains('apbct-real-user-popup') &&\n                    selection.toString().length === 0\n                ) {\n                    popup.classList.remove('visible');\n                } else {\n                    clearTimeout(hideTimeout);\n                    document.addEventListener('selectionchange', function onSelectionChange() {\n                        const selection = window.getSelection();\n                        if (selection && selection.toString().length === 0) {\n                            // Restart the hide timeout when selection is cleared\n                            hideTimeout = setTimeout(() => {\n                                const popup = badge.nextElementSibling;\n                                if (popup && popup.classList.contains('apbct-real-user-popup')) {\n                                    popup.classList.remove('visible');\n                                }\n                            }, 3000);\n                            document.removeEventListener('selectionchange', onSelectionChange);\n                        }\n                    });\n                }\n            }, 3000);\n        });\n    });\n});\n\n/**\n * Closing all TRP popup\n */\nfunction closeAllPopupTRP() {\n    let allDisplayPopup = document.querySelectorAll('.apbct-real-user-popup.visible');\n    if (allDisplayPopup.length > 0) {\n        allDisplayPopup.forEach((element) => {\n            element.classList.remove('visible');\n        });\n    }\n}\n"],"file":"apbct-public--7--trp.min.js"}
{"version":3,"file":"common-cleantalk-modal.min.js","sources":["common-cleantalk-modal.js"],"sourcesContent":["/* Cleantalk Modal object */\nvar cleantalkModal = cleantalkModal || { // eslint-disable-line no-var\n\n    // Flags\n    loaded: false,\n    loading: false,\n    opened: false,\n    opening: false,\n    ignoreURLConvert: false,\n\n    // Methods\n    load: function( action ) {\n        if ( ! this.loaded ) {\n            this.loading = true;\n            let callback = function( result, data, params, obj ) {\n                cleantalkModal.loading = false;\n                cleantalkModal.loaded = result;\n                document.dispatchEvent(\n                    new CustomEvent( 'cleantalkModalContentLoaded', {\n                        bubbles: true,\n                    } ),\n                );\n            };\n            // eslint-disable-next-line camelcase\n            if ( typeof apbct_admin_sendAJAX === 'function' ) {\n                apbct_admin_sendAJAX( {'action': action}, {'callback': callback, 'notJson': true} );\n            } else {\n                apbct_public_sendAJAX( {'action': action}, {'callback': callback, 'notJson': true} );\n            }\n        }\n    },\n\n    /**\n     * Open modal\n     * @param {boolean|string} actionCallbackName\n     */\n    open: function(actionCallbackName = 'get_options_template') {\n        /* Cleantalk Modal CSS start */\n        let renderCss = function() {\n            let cssStr = '';\n            // eslint-disable-next-line guard-for-in\n            for ( const key in this.styles ) {\n                cssStr += key + ':' + this.styles[key] + ';';\n            }\n            return cssStr;\n        };\n        let overlayCss = {\n            styles: {\n                'z-index': '9999999999',\n                'position': 'fixed',\n                'top': '0',\n                'left': '0',\n                'width': '100%',\n                'height': '100%',\n                'background': 'rgba(0,0,0,0.5)',\n                'display': 'flex',\n                'justify-content': 'center',\n                'align-items': 'center',\n            },\n            toString: renderCss,\n        };\n        let innerCss = {\n            styles: {\n                'position': 'relative',\n                'padding': '30px',\n                'background': '#FFF',\n                'border': '1px solid rgba(0,0,0,0.75)',\n                'border-radius': '4px',\n                'box-shadow': '7px 7px 5px 0px rgba(50,50,50,0.75)',\n            },\n            toString: renderCss,\n        };\n        let closeCss = {\n            styles: {\n                'position': 'absolute',\n                'background': '#FFF',\n                'width': '20px',\n                'height': '20px',\n                'border': '2px solid rgba(0,0,0,0.75)',\n                'border-radius': '15px',\n                'cursor': 'pointer',\n                'top': '-8px',\n                'right': '-8px',\n                'box-sizing': 'content-box',\n            },\n            toString: renderCss,\n        };\n        let closeCssBefore = {\n            styles: {\n                'content': '\"\"',\n                'display': 'block',\n                'position': 'absolute',\n                'background': '#000',\n                'border-radius': '1px',\n                'width': '2px',\n                'height': '16px',\n                'top': '2px',\n                'left': '9px',\n                'transform': 'rotate(45deg)',\n            },\n            toString: renderCss,\n        };\n        let closeCssAfter = {\n            styles: {\n                'content': '\"\"',\n                'display': 'block',\n                'position': 'absolute',\n                'background': '#000',\n                'border-radius': '1px',\n                'width': '2px',\n                'height': '16px',\n                'top': '2px',\n                'left': '9px',\n                'transform': 'rotate(-45deg)',\n            },\n            toString: renderCss,\n        };\n        let bodyCss = {\n            styles: {\n                'overflow': 'hidden',\n            },\n            toString: renderCss,\n        };\n        let cleantalkModalStyle = document.createElement( 'style' );\n        cleantalkModalStyle.setAttribute( 'id', 'cleantalk-modal-styles' );\n        cleantalkModalStyle.innerHTML = 'body.cleantalk-modal-opened{' + bodyCss + '}';\n        cleantalkModalStyle.innerHTML += '#cleantalk-modal-overlay{' + overlayCss + '}';\n        cleantalkModalStyle.innerHTML += '#cleantalk-modal-close{' + closeCss + '}';\n        cleantalkModalStyle.innerHTML += '#cleantalk-modal-close:before{' + closeCssBefore + '}';\n        cleantalkModalStyle.innerHTML += '#cleantalk-modal-close:after{' + closeCssAfter + '}';\n        document.body.append( cleantalkModalStyle );\n        /* Cleantalk Modal CSS end */\n\n        let overlay = document.createElement( 'div' );\n        overlay.setAttribute( 'id', 'cleantalk-modal-overlay' );\n        document.body.append( overlay );\n\n        document.body.classList.add( 'cleantalk-modal-opened' );\n\n        let inner = document.createElement( 'div' );\n        inner.setAttribute( 'id', 'cleantalk-modal-inner' );\n        inner.setAttribute( 'style', innerCss );\n        overlay.append( inner );\n\n        let close = document.createElement( 'div' );\n        close.setAttribute( 'id', 'cleantalk-modal-close' );\n        inner.append( close );\n\n        let content = document.createElement( 'div' );\n        if ( this.loaded ) {\n            const urlRegex = /(https?:\\/\\/[^\\s]+)/g;\n            const serviceContentRegex = /.*\\/inc/g;\n            if (serviceContentRegex.test(this.loaded) || this.ignoreURLConvert) {\n                content.innerHTML = this.loaded;\n            } else {\n                content.innerHTML = this.loaded.replace(urlRegex, '<a href=\"$1\" target=\"_blank\">$1</a>');\n            }\n        } else {\n            content.innerHTML = 'Loading...';\n            // @ToDo Here is hardcoded parameter. Have to get this from a 'data-' attribute.\n            if (actionCallbackName) {\n                this.load( actionCallbackName );\n            }\n        }\n        content.setAttribute( 'id', 'cleantalk-modal-content' );\n        inner.append( content );\n\n        this.opened = true;\n    },\n\n    confirm: function(header, text = '', filePath = '', callback, yesButtonText = 'Yes', noButtonText = 'No') {\n        cleantalkModal.loading = false;\n        let contentBlock = document.getElementById('cleantalk-modal-content');\n        if (contentBlock) {\n            contentBlock.innerHTML = '';\n\n            const headerBlock = document.createElement('div');\n            headerBlock.className = 'cleantalk-confirm-modal_header';\n            headerBlock.textContent = header;\n            contentBlock.append(headerBlock);\n\n            // Create text block\n            const textBlock = document.createElement('div');\n            textBlock.className = 'cleantalk-confirm-modal_text-block';\n            contentBlock.append(textBlock);\n\n            if (filePath && filePath.length > 60) {\n                filePath = '...' + filePath.slice(filePath.length - 60);\n            }\n\n            const textElem = document.createElement('div');\n            textElem.className = 'cleantalk-confirm-modal_text';\n            textElem.textContent = text;\n            textBlock.append(textElem);\n\n            // Create buttons block\n            const buttonsBlock = document.createElement('div');\n            buttonsBlock.className = 'cleantalk-confirm-modal_buttons-block';\n            contentBlock.append(buttonsBlock);\n\n            const yesButton = document.createElement('button');\n            yesButton.className = 'cleantalk_link cleantalk_link-auto';\n            yesButton.textContent = yesButtonText;\n            yesButton.onclick = function() {\n                callback(true);\n                cleantalkModal.close();\n            };\n            buttonsBlock.append(yesButton);\n\n            const noButton = document.createElement('button');\n            noButton.className = 'cleantalk_link cleantalk_link-auto';\n            noButton.textContent = noButtonText;\n            noButton.onclick = function() {\n                cleantalkModal.close();\n            };\n            buttonsBlock.append(noButton);\n        }\n        document.dispatchEvent(\n            new CustomEvent( 'cleantalkModalContentLoaded', {\n                bubbles: true,\n            } ),\n        );\n    },\n\n    close: function() {\n        document.body.classList.remove( 'cleantalk-modal-opened' );\n        const overlay = document.getElementById( 'cleantalk-modal-overlay' );\n        const styles = document.getElementById( 'cleantalk-modal-styles' );\n        overlay !== null && overlay.remove();\n        styles !== null && styles.remove();\n        document.dispatchEvent(\n            new CustomEvent( 'cleantalkModalClosed', {\n                bubbles: true,\n            } ),\n        );\n    },\n\n};\n\n/* Cleantalk Modal helpers */\ndocument.addEventListener('click', function( e ) {\n    if ( e.target && (e.target.id === 'cleantalk-modal-overlay' || e.target.id === 'cleantalk-modal-close') ) {\n        cleantalkModal.close();\n    }\n});\ndocument.addEventListener('cleantalkModalContentLoaded', function( e ) {\n    if ( cleantalkModal.opened && cleantalkModal.loaded ) {\n        document.getElementById( 'cleantalk-modal-content' ).innerHTML = cleantalkModal.loaded;\n    }\n});\n"],"names":["cleantalkModal","loaded","loading","opened","opening","ignoreURLConvert","load","action","callback","this","result","data","params","obj","document","dispatchEvent","CustomEvent","bubbles","apbct_admin_sendAJAX","apbct_public_sendAJAX","notJson","open","actionCallbackName","renderCss","let","cssStr","key","styles","overlayCss","z-index","position","top","left","width","height","background","display","justify-content","align-items","toString","innerCss","padding","border","border-radius","box-shadow","closeCss","cursor","right","box-sizing","closeCssBefore","content","transform","closeCssAfter","bodyCss","overflow","cleantalkModalStyle","createElement","overlay","setAttribute","innerHTML","body","append","inner","classList","add","close","urlRegex","test","replace","confirm","header","text","filePath","yesButtonText","noButtonText","textElem","contentBlock","getElementById","headerBlock","className","textContent","textBlock","length","slice","buttonsBlock","yesButton","onclick","noButton","remove","addEventListener","e","target","id"],"mappings":"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"}
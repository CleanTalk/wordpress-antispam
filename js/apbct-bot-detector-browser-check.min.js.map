{"version":3,"file":"apbct-bot-detector-browser-check.min.js","sources":["apbct-bot-detector-browser-check.js"],"sourcesContent":["/**\n * Class for bot detector work visualisation.\n *\n * Create a new CtBotDetectorWidget()  on any page to make it work.\n */\nclass CtBotDetectorWidget {\n    titleOnCheck = 'botDetector in action!';\n    // titleHuman = 'You\\'re a real person!';\n    titleActive = '';\n    // eslint-disable-next-line max-len\n    cleantalkLogo = 'https://s3.eu-central-1.amazonaws.com/cleantalk-ctask-atts/accounts/1/148997/57d089a85d4d208d/web_hi_res_512.png';\n    // trpLogo = 'https://s3.eu-central-1.amazonaws.com/cleantalk-ctask-atts/accounts/1/153743/e7389e1e6ca21357/2.png';\n    logoAltText = 'CleanTalk';\n    privacyLink = 'https://cleantalk.org/privacy';\n    termsLink = 'https://cleantalk.org/terms';\n    // eslint-disable-next-line no-template-curly-in-string, max-len\n    svgBad = '<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" fill=\"#FF0000\"/></svg>';\n    // eslint-disable-next-line no-template-curly-in-string, max-len\n    svgGood = '<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41L9 16.17z\" fill=\"#4CAF50\"/></svg>';\n    container = null;\n    collapsedContent = null;\n    fullContent = null;\n    visitorIsBot = false;\n    storageNameWidgetRendered = 'ct_widget_rendered';\n    storageNameVisitorChecked = 'ct_widget_visitor_checked';\n\n    /**\n     * Class constructor\n     */\n    constructor() {\n        this.addStyles();\n        this.addEventListeners();\n    }\n\n    /**\n     * Draw widget logic\n     */\n    initWidget() {\n        this.titleActive = this.titleOnCheck;\n        this.renderWidget();\n        this.showWidget();\n    }\n\n    /**\n     * Start listening of bot detector start.\n     */\n    addEventListeners() {\n        // skip if user already checked\n        if (this.storageGetVisitorChecked()) {\n            return;\n        }\n\n        // setup storage flags\n        this.storageSetWidgetRendered(0);\n        this.storageSetVisitorChecked(0);\n\n        // actions for frontend_data fire\n        document.addEventListener('ctBotDetectorStart', () => {\n            if (!this.storageGetWidgetRendered()) {\n                this.initWidget();\n                this.storageSetWidgetRendered(1);\n            }\n        });\n        document.addEventListener('ctBotDetectorEnd', () => {\n            if (this.storageGetWidgetRendered()) {\n                this.collapseWidget();\n                this.storageSetVisitorChecked(1);\n            }\n        });\n\n        // actions for check_bot\n        document.addEventListener('ctCheckBotStarted', () => {\n            if (!this.storageGetWidgetRendered()) {\n                this.initWidget();\n                this.storageSetWidgetRendered(1);\n            }\n        });\n        document.addEventListener('ctCheckBotFinished', () => {\n            if (this.storageGetWidgetRendered()) {\n                this.collapseWidget();\n                this.storageSetVisitorChecked(1);\n            }\n        });\n\n        // !!test action, remove before prod!!\n        setTimeout(() => {\n            if (!this.storageGetWidgetRendered()) {\n                this.initWidget();\n                this.storageSetWidgetRendered(1);\n                this.collapseWidgetByTimeout();\n            }\n        }, 1000);\n    }\n\n    /**\n     * =============== RENDERING ===============\n     */\n\n    /**\n     * Render widget\n     */\n    renderWidget() {\n        // Find or create container\n        this.container = document.querySelector('.ct-browser-check-container') ||\n            document.createElement('div');\n\n        if (!this.container.classList.contains('ct-browser-check-container')) {\n            this.container.classList.add('ct-browser-check-container');\n            this.container.classList.add('ct-widget-hidden-element');\n            document.body.appendChild(this.container);\n        }\n\n        // Clear existing content\n        this.container.innerHTML = '';\n\n        // Create and append collapsed widget\n        this.collapsedContent = this.createCollapsedContent();\n        // Add close button\n        this.closeButton = this.createCloseButton();\n        this.container.appendChild(this.closeButton);\n        this.container.appendChild(this.collapsedContent);\n\n        // Create and append full widget\n        this.fullContent = this.createFullContent();\n        this.container.appendChild(this.fullContent);\n    }\n\n    /**\n     * Create spinner element for visual check process\n     * @return {IXMLDOMElement} spinner\n     */\n    createSpinner() {\n        const spinner = document.createElement('div');\n        spinner.className = 'ct-browser-check-spinner loader';\n        return spinner;\n    }\n\n    /**\n     * Create collapsed widget content element\n     * @return {IXMLDOMElement} wrapper\n     */\n    createCollapsedContent() {\n        const wrapper = document.createElement('div');\n        wrapper.id = 'ct_collapsed_widget_wrapper';\n        wrapper.className = 'ct-widget-hidden-element';\n\n        const imgContainer = document.createElement('div');\n        imgContainer.style.width = '30px';\n        imgContainer.style.height = '30px';\n\n        const img = document.createElement('img');\n        img.src = this.cleantalkLogo;\n        imgContainer.appendChild(img);\n\n        const altText = document.createElement('div');\n        altText.textContent = this.logoAltText;\n\n        wrapper.appendChild(imgContainer);\n        wrapper.appendChild(altText);\n\n        return wrapper;\n    }\n\n    /**\n     * Create full content element\n     * @return {IXMLDOMElement} wrapper\n     */\n    createFullContent() {\n        const wrapper = document.createElement('div');\n        wrapper.id = 'ct_full_widget_wrapper';\n        wrapper.className = 'ct-widget-full-wrapper';\n\n        // Add spinner\n        wrapper.appendChild(this.createSpinner());\n\n        // Add title\n        const title = document.createElement('div');\n        title.className = 'ct-browser-check-title';\n        title.textContent = this.titleActive;\n        wrapper.appendChild(title);\n\n        // Add company info\n        wrapper.appendChild(this.createCompanyInfo());\n\n        return wrapper;\n    }\n\n    /**\n     * Create close button\n     * @return {IXMLDOMElement} wrapper\n     */\n    createCloseButton() {\n        const button = document.createElement('button');\n        button.className = 'ct-widget-close-button';\n        button.innerHTML = `\n        <svg width=\"12\" height=\"12\" viewBox=\"0 0 12 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M1 1L11 11M1 11L11 1\" stroke=\"#777777\" stroke-width=\"2\" stroke-linecap=\"round\"/>\n        </svg>\n    `;\n        button.addEventListener('click', () => {\n            this.hideWidget();\n        });\n        button.title = 'Close';\n        return button;\n    }\n\n    /**\n     * Create company info element\n     * @return {IXMLDOMElement} wrapper\n     */\n    createCompanyInfo() {\n        const container = document.createElement('div');\n        container.className = 'ct-browser-check-company-info';\n\n        // Create info wrapper\n        const infoWrapper = document.createElement('div');\n        infoWrapper.className = 'ct-browser-check-company-info-wrapper';\n\n        // Create logo\n        const logoContainer = document.createElement('div');\n        logoContainer.className = 'ct-browser-check-company-info-logo';\n        logoContainer.style.width = '20px';\n        logoContainer.style.height = '20px';\n\n        const logo = document.createElement('img');\n        logo.src = this.cleantalkLogo;\n        logo.alt = this.logoAltText;\n        logoContainer.appendChild(logo);\n\n        // Create title\n        const title = document.createElement('div');\n        title.className = 'ct-browser-check-company-info-title';\n        title.textContent = this.logoAltText;\n\n        // Add to wrapper\n        infoWrapper.appendChild(logoContainer);\n        infoWrapper.appendChild(title);\n\n        // Create links\n        const linksContainer = document.createElement('div');\n        linksContainer.className = 'ct-browser-check-company-info-description';\n\n        const privacyLink = document.createElement('a');\n        privacyLink.href = this.privacyLink;\n        privacyLink.target = '_blank';\n        privacyLink.textContent = 'Privacy';\n\n        const separator = document.createElement('span');\n        separator.textContent = 'Â·';\n\n        const termsLink = document.createElement('a');\n        termsLink.href = this.termsLink;\n        termsLink.target = '_blank';\n        termsLink.textContent = 'Terms';\n\n        // Add links to container\n        linksContainer.appendChild(privacyLink);\n        linksContainer.appendChild(separator);\n        linksContainer.appendChild(termsLink);\n\n        // Add all to main container\n        container.appendChild(infoWrapper);\n        container.appendChild(linksContainer);\n\n        return container;\n    }\n\n    /**\n     * =============== ACTIONS ===============\n     */\n\n    /**\n     * Make widget visible\n     */\n    showWidget() {\n        this.container.classList.remove('ct-widget-hidden-element');\n    }\n\n    /**\n     * Make widget invisible\n     */\n    hideWidget() {\n        this.container.classList.add('ct-widget-hidden-element');\n    }\n\n    /**\n     * Collapse widget by timeout\n     * @param {int} timeout\n     */\n    collapseWidgetByTimeout(timeout = 3000) {\n        setTimeout(() => {\n            this.collapseWidget();\n            this.storageSetVisitorChecked(1);\n        }, timeout);\n    }\n\n    /**\n     * Collapse widget by timeout\n     */\n    collapseWidget() {\n        this.fullContent.classList = 'ct-widget-hidden-element';\n        this.container.style.width = '80px';\n        this.collapsedContent.classList = 'ct-widget-collapsed-wrapper';\n    }\n\n    /**\n     * =============== STYLES ===============\n     */\n\n    /**\n     * Creates and adds styles to the document head\n     * Uses CSSStyleSheet API when available for better performance\n     */\n    addStyles() {\n        // Try to use the more modern CSSStyleSheet API first\n        if ('adoptedStyleSheets' in document) {\n            const sheet = new CSSStyleSheet();\n            sheet.replaceSync(this.getStylesText());\n            document.adoptedStyleSheets = [...document.adoptedStyleSheets, sheet];\n        } else { // Fallback to traditional style element\n            const style = document.createElement('style');\n            style.textContent = this.getStylesText();\n            document.head.appendChild(style);\n        }\n    }\n\n    /**\n     * Returns the complete CSS text in a more organized structure\n     * @return {string}\n     */\n    getStylesText() {\n        return `\n        /* Loader styles */\n        .ct-browser-check-loader { \n            width: 20px; \n            margin: 5px auto;\n            aspect-ratio: 1; \n            border: 3px solid #F3F6F9; \n            border-radius: 50%; \n            position: relative; \n            transform: rotate(45deg); \n        } \n        \n        .ct-browser-check-loader::before { \n            content: \"\"; \n            position: absolute; \n            inset: -3px; \n            border-radius: 50%; \n            border: 3px solid #026E88; \n            animation: l18 2s infinite linear; \n        } \n        \n        /* Container styles */\n        .ct-browser-check-container {\n            font-size: 12px;\n            font-weight: bold;\n            color: #777777;\n            position: fixed;\n            top: calc(97% - 80px);\n            right: -5px;\n            width: 320px;\n            height: 80px;\n            z-index: 9999;\n            background-color: #fff;\n            border-radius: 5px 0 0 5px;\n            border: 1px solid #bbbbbb;\n            box-shadow: 0 0 5px 0 rgba(0, 0, 0, 0.1);\n            transition: right 0.3s ease-in-out;\n            padding: 1% 0px;\n        }\n        \n        /* Company info styles */\n        .ct-browser-check-company-info-wrapper {\n            display: flex;\n            flex-direction: row;\n            flex-wrap: nowrap;\n            justify-content: center;\n            align-items: flex-end;\n        }\n        \n        /* Widget layout styles */\n        .ct-widget-collapsed-wrapper {\n            display: flex; \n            flex-direction: column;\n            align-items: center;\n            justify-content: center;\n            height: 100%; \n        }\n        \n        /* Close button styles */\n        .ct-widget-close-button {\n            position: absolute;\n            top: -6px;\n            right: calc(100% - 8px);\n            width: 15px;\n            height: 15px;\n            padding: 4px;\n            background: white;\n            box-shadow: 0 0 5px 0 rgba(0, 0, 0, 0.1);\n            cursor: pointer;\n            border: 1px solid #bbbbbb;\n            border-radius: 15px;\n            transition: opacity 0.2s ease;\n        }\n        \n        .ct-widget-close-button:hover {\n            scale: 1.1;\n        }\n        \n        .ct-widget-close-button svg {\n            display: block;\n            width: 100%;\n            height: 100%;\n        }\n        \n        .ct-widget-full-wrapper {\n            display: flex; \n            flex-direction: row;\n            justify-content: space-evenly;\n            align-items: center; \n        }\n        \n        .ct-widget-hidden-element {\n            display: none;\n        }\n        \n        .loader { \n                width: 40px; \n                aspect-ratio: 1; \n                border: 10px solid #F3F6F9; \n                border-radius: 50%; \n                position: relative; \n                transform: rotate(45deg); \n            } \n        .loader::before { \n            content: \"\"; \n            position: absolute; \n            inset: -10px; \n            border-radius: 50%; \n            border: 10px solid #026E88; \n            animation: l18 3s infinite linear; \n        } \n        \n        /* Animation keyframes */\n        @keyframes l18 { \n            0% { clip-path: polygon(50% 50%, 0 0, 0 0, 0 0, 0 0, 0 0) } \n            25% { clip-path: polygon(50% 50%, 0 0, 100% 0, 100% 0, 100% 0, 100% 0) } \n            50% { clip-path: polygon(50% 50%, 0 0, 100% 0, 100% 100%, 100% 100%, 100% 100%) } \n            75% { clip-path: polygon(50% 50%, 0 0, 100% 0, 100% 100%, 0 100%, 0 100%) } \n            100% { clip-path: polygon(50% 50%, 0 0, 100% 0, 100% 100%, 0 100%, 0 0) } \n        }\n    `;\n    }\n\n    /**\n     * =============== STORAGE ===============\n     */\n\n    /**\n     * Set flag of widget rendered\n     * @param {int} value 1|0\n     */\n    storageSetWidgetRendered(value) {\n        sessionStorage.setItem(this.storageNameWidgetRendered, value.toString());\n    }\n\n    /**\n     * Check if widget already rendered\n     * @return {boolean}\n     */\n    storageGetWidgetRendered() {\n        return sessionStorage.getItem(this.storageNameVisitorChecked) === '1';\n    }\n\n    /**\n     * Set flag of visitor checked\n     * @param {int} value 1|0\n     */\n    storageSetVisitorChecked(value) {\n        sessionStorage.setItem(this.storageNameVisitorChecked, value.toString());\n    }\n\n    /**\n     * Check if visitor already checked\n     * @return {boolean}\n     */\n    storageGetVisitorChecked() {\n        return sessionStorage.getItem(this.storageNameVisitorChecked) === '1';\n    }\n}\n\ndocument.addEventListener('DOMContentLoaded', function() {\n    console.log('DOMContentLoaded');\n    const apbctBrowserCheck = new CtBotDetectorWidget();\n    console.log(apbctBrowserCheck);\n});\n//\n// document.addEventListener('DOMContentLoaded', function() {\n//     loaderContainer.className = 'ct-browser-check-container';\n//     let startTime = null;\n//     let timeoutToShowResult = 3000;\n//\n//     document.addEventListener('ctBotDetectorStart', function() {\n//         if (localStorage.getItem('ct-browser-check-result')) {\n//             showSavedResult();\n//             return;\n//         }\n//\n//         loaderContainer.style.display = 'block';\n//         startTime = new Date();\n//     });\n//\n//     document.addEventListener('ctBotDetectorEnd', function() {\n//         console.log('ctBotDetectorEnd');\n//     });\n//\n//     document.addEventListener('ctBotDetectorResult', function() {\n//         if (localStorage.getItem('ct-browser-check-result')) {\n//             return;\n//         }\n//\n//         if (startTime && new Date() - startTime < timeoutToShowResult) {\n//             setTimeout(() => {\n//                 showResult();\n//             }, timeoutToShowResult - (new Date() - startTime));\n//             return;\n//         }\n//\n//         setTimeout(() => {\n//             showResult();\n//         }, timeoutToShowResult);\n//     });\n//\n//     function showSavedResult() {\n//         const result = localStorage.getItem('ct-browser-check-result');\n//         if (result === 'human') {\n//             document.querySelector('.ct-browser-check-title').textContent = 'The Real Person';\n//         }\n//     }\n//\n//     /**\n//      * Show result\n//      */\n//     function showResult() {\n//         // let results = ['bot', 'human'];\n//         let results = ['human'];\n//         let result = results[Math.floor(Math.random() * results.length)];\n//         // store result in local storage\n//         localStorage.setItem('ct-browser-check-result', result);\n//         if (document.querySelector('.ct-browser-check-loader')) {\n//             document.querySelector('.ct-browser-check-loader').remove();\n//         }\n//         if (document.querySelector('.ct-browser-check-description')) {\n//             document.querySelector('.ct-browser-check-description').remove();\n//         }\n//         document.querySelector('.ct-browser-check-container').style.height = '50px';\n//\n//         // prepare data\n//         let title = 'botDetector';\n//         let svg = '';\n//         let arrowAction = '';\n//         switch (result) {\n//         case 'bot':\n//             console.log('bot');\n//             // eslint-disable-next-line no-template-curly-in-string, max-len\n//             svg = '<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" fill=\"#FF0000\"/></svg>';\n//             break;\n//         case 'human':\n//             console.log('human');\n//             title = 'The Real Person';\n//             // eslint-disable-next-line no-template-curly-in-string, max-len\n//             svg = '<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41L9 16.17z\" fill=\"#4CAF50\"/></svg>';\n//             arrowAction = ' style=\"cursor: pointer;\" onclick=\"ctBrowserCheckHide();\" ';\n//             break;\n//         }\n//         document.querySelector('.ct-browser-check-title').textContent = title;\n//         const dev = document.createElement('div');\n//         dev.className = 'ct-browser-check-human';\n//         dev.innerHTML = `\n//             ${svg}\n//             <span class=\"ct-browser-check-human-arrow\"${arrowAction}>&gt;</span>\n//         `;\n//         loaderContainer.appendChild(dev);\n//     }\n//\n//\n//     document.addEventListener('ctBotDetectorError', function() {\n//         console.log('ctBotDetectorError');\n//     });\n//\n//\n//     // add div with title\n//     const title = document.createElement('div');\n//     title.className = 'ct-browser-check-title';\n//     title.style.cssText = `\n//         border-bottom: 1px solid #bbbbbb;\n//     `;\n//     title.textContent = 'botDetector';\n//     loaderContainer.appendChild(title);\n//\n//     // Create loader element\n//     const loader = document.createElement('div');\n//     loader.className = 'ct-browser-check-loader';\n//\n//     // Add loader to container and container to body\n//     loaderContainer.appendChild(loader);\n//     document.body.appendChild(loaderContainer);\n//\n//     // add div with description\n//     const description = document.createElement('div');\n//     description.className = 'ct-browser-check-description';\n//     description.style.cssText = `\n//         border-top: 1px solid #bbbbbb;\n//     `;\n//     description.textContent = 'Browser check';\n//     loaderContainer.appendChild(description);\n// });\n"],"names":["CtBotDetectorWidget","titleOnCheck","titleActive","cleantalkLogo","logoAltText","privacyLink","termsLink","svgBad","svgGood","container","collapsedContent","fullContent","visitorIsBot","storageNameWidgetRendered","storageNameVisitorChecked","constructor","this","addStyles","addEventListeners","initWidget","renderWidget","showWidget","storageGetVisitorChecked","storageSetWidgetRendered","storageSetVisitorChecked","document","addEventListener","storageGetWidgetRendered","collapseWidget","setTimeout","collapseWidgetByTimeout","querySelector","createElement","classList","contains","add","body","appendChild","innerHTML","createCollapsedContent","closeButton","createCloseButton","createFullContent","createSpinner","spinner","className","wrapper","imgContainer","id","img","style","width","height","altText","src","textContent","title","createCompanyInfo","button","hideWidget","infoWrapper","logoContainer","logo","alt","linksContainer","separator","href","target","remove","timeout","sheet","CSSStyleSheet","replaceSync","getStylesText","adoptedStyleSheets","head","value","sessionStorage","setItem","toString","getItem","console","log","apbctBrowserCheck"],"mappings":"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"}
{"version":3,"file":"cleantalk-dashboard-widget.min.js","sources":["cleantalk-dashboard-widget.js"],"sourcesContent":["jQuery(document).ready(function(){\n\t\n\t// Set \"refresh\" link handler\n\tjQuery(\".ct_widget_refresh_link\").on('click', function(){\n\t\tjQuery('.ct_preloader').show();\n\t\tsetTimeout(function(){window.scrollTo(0, jQuery('#ct_widget_wrapper').offset().top - 130);}, 1);\t\t\n\t\tsetTimeout(function(){jQuery(\"#ct_refresh_form\").submit();}, 2500);\n\t});\n\t\n\tif(location.hash == '#ct_widget')\n\t\tsetTimeout(function(){window.scrollTo(0, jQuery('#ct_widget_wrapper').offset().top - 130);}, 1);\n\t\n\t// Fixing default wrapper style\n\tjQuery(\"#ct_widget_wrapper\").parent().css('padding', 0);\n\t\n\t// Chart \n\tvar ct_chart = document.getElementById('ct_widget_chart'),\n\t\tlocale = navigator.language || navigator.userLanguage;\n\t\t\n\tfunction ctParseData(date){\n\t\tvar date_formatter = new Intl.DateTimeFormat(locale, {\n\t\t\tmonth: \"short\",\n\t\t\tday: \"numeric\"\n\t\t});\t\n\t\tdate.sort(function(a,b){\n\t\t\treturn new Date(a[0]) - new Date(b[0]) \n\t\t});\t\t\t\n\t\tdate.forEach(function(d){\t\n\t\t\td[0] = Date.parse(d[0]);\n\t\t\td[0] = date_formatter.format(d[0]);\n\t\t});\t\t\n\t}\n\t\t\n\tgoogle.charts.load('current', {packages:['corechart', 'bar']});\n\tgoogle.charts.setOnLoadCallback(drawStuff);\n\n\tfunction drawStuff() {\n\t\tvar data = new google.visualization.DataTable();\n\t\tdata.addColumn('string', 'Spam Blocked');\n\t\tdata.addColumn('number', 'Frequency');\n\t\t\n\t\tctParseData(apbctDashboardWidget.data);\n\t\tdata.addRows(apbctDashboardWidget.data);\n\t\n\t\tvar options = {\n\t\t\twidth: jQuery(\".ct_widget_block\").first().width(),\n\t\t\theight: 300,\n\t\t\tcolors: ['steelblue'],\n\t\t\tlegend: 'none',\n\t\t\tbar: {groupWidth: '95%'},\n\t\t\tchartArea:{left:30,top:20,width:'93%',height:'80%'},\n\t\t\tvAxis: { gridlines: { count: 5 } }\n\t\t};\n\n\t\tif(ct_chart){\n\t\t\tvar chart = new google.visualization.ColumnChart(ct_chart);\n\t\t\tchart.draw(data, options);\n\t\t}\n\t};\t\n});"],"names":["jQuery","document","ready","on","show","setTimeout","window","scrollTo","offset","top","submit","location","hash","parent","css","ct_chart","getElementById","locale","navigator","language","userLanguage","google","charts","load","packages","setOnLoadCallback","data","visualization","DataTable","options","addColumn","date","date_formatter","Intl","DateTimeFormat","month","day","sort","a","b","Date","forEach","d","parse","format","apbctDashboardWidget","addRows","width","first","height","colors","legend","bar","groupWidth","chartArea","left","vAxis","gridlines","count","ColumnChart","draw"],"mappings":"AAAAA,OAAOC,QAAQ,EAAEC,MAAM,WAGtBF,OAAO,yBAAyB,EAAEG,GAAG,QAAS,WAC7CH,OAAO,eAAe,EAAEI,KAAK,EAC7BC,WAAW,WAAWC,OAAOC,SAAS,EAAGP,OAAO,oBAAoB,EAAEQ,OAAO,EAAEC,IAAM,GAAG,CAAE,EAAG,CAAC,EAC9FJ,WAAW,WAAWL,OAAO,kBAAkB,EAAEU,OAAO,CAAE,EAAG,IAAI,CAClE,CAAC,EAEmB,cAAjBC,SAASC,MACXP,WAAW,WAAWC,OAAOC,SAAS,EAAGP,OAAO,oBAAoB,EAAEQ,OAAO,EAAEC,IAAM,GAAG,CAAE,EAAG,CAAC,EAG/FT,OAAO,oBAAoB,EAAEa,OAAO,EAAEC,IAAI,UAAW,CAAC,EAGtD,IAAIC,EAAWd,SAASe,eAAe,iBAAiB,EACvDC,EAASC,UAAUC,UAAYD,UAAUE,aAgB1CC,OAAOC,OAAOC,KAAK,UAAW,CAACC,SAAS,CAAC,YAAa,MAAM,CAAC,EAC7DH,OAAOC,OAAOG,kBAEd,WACC,IAAIC,EAAO,IAAIL,OAAOM,cAAcC,UAOhCC,GANJH,EAAKI,UAAU,SAAU,cAAc,EACvCJ,EAAKI,UAAU,SAAU,WAAW,EApBrC,SAAqBC,GACpB,IAAIC,EAAiB,IAAIC,KAAKC,eAAejB,EAAQ,CACpDkB,MAAO,QACPC,IAAK,SACN,CAAC,EACDL,EAAKM,KAAK,SAASC,EAAEC,GACpB,OAAO,IAAIC,KAAKF,EAAE,EAAE,EAAI,IAAIE,KAAKD,EAAE,EAAE,CACtC,CAAC,EACDR,EAAKU,QAAQ,SAASC,GACrBA,EAAE,GAAKF,KAAKG,MAAMD,EAAE,EAAE,EACtBA,EAAE,GAAKV,EAAeY,OAAOF,EAAE,EAAE,CAClC,CAAC,CACF,EAUaG,qBAAqBnB,IAAI,EACrCA,EAAKoB,QAAQD,qBAAqBnB,IAAI,EAExB,CACbqB,MAAO/C,OAAO,kBAAkB,EAAEgD,MAAM,EAAED,MAAM,EAChDE,OAAQ,IACRC,OAAQ,CAAC,aACTC,OAAQ,OACRC,IAAK,CAACC,WAAY,KAAK,EACvBC,UAAU,CAACC,KAAK,GAAG9C,IAAI,GAAGsC,MAAM,MAAME,OAAO,KAAK,EAClDO,MAAO,CAAEC,UAAW,CAAEC,MAAO,CAAE,CAAE,CAClC,GAEG3C,GACU,IAAIM,OAAOM,cAAcgC,YAAY5C,CAAQ,EACnD6C,KAAKlC,EAAMG,CAAO,CAE1B,CAxByC,CAyB1C,CAAC"}
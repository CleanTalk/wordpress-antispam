{"version":3,"file":"cleantalk-comments-checkspam.min.js","sources":["cleantalk-comments-checkspam.js"],"sourcesContent":["// Printf for JS\r\nString.prototype.printf = function() { // eslint-disable-line no-extend-native\r\n    let formatted = this;\r\n    for ( let arg in arguments ) { // eslint-disable-line guard-for-in,prefer-rest-params\r\n        let beforeFormatted = formatted.substring(0, formatted.indexOf('%s', 0));\r\n        let afterFormatted = formatted.substring(formatted.indexOf('%s', 0)+2, formatted.length);\r\n        // eslint-disable-next-line guard-for-in,prefer-rest-params\r\n        formatted = beforeFormatted + arguments[arg] + afterFormatted;\r\n    }\r\n    return formatted;\r\n};\r\n\r\n// Flags\r\nlet ctWorking = false;\r\nlet ctNewCheck = true;\r\nlet ctCoolingDownFlag = false;\r\nlet ctCloseAnimate = true;\r\nlet ctAccurateCheck = false;\r\nlet ctPause = false;\r\nlet ctPrevAccurate = ctCommentsCheck.ct_prev_accurate;\r\nlet ctPrevFrom = ctCommentsCheck.ct_prev_from;\r\nlet ctPrevTill = ctCommentsCheck.ct_prev_till;\r\n// Settings\r\nlet ctCoolDownTime = 90000;\r\nlet ctRequestsCounter = 0;\r\nlet ctMaxRequests = 60;\r\n// Variables\r\nlet ctAjaxNonce = ctCommentsCheck.ct_ajax_nonce;\r\nlet ctCommentsTotal = 0;\r\nlet ctCommentsChecked = 0;\r\nlet ctCommentsSpam = 0;\r\nlet ctCommentsBad = 0;\r\nlet ctUnchecked = 'unset';\r\nlet ctDateFrom = 0;\r\nlet ctDateTill = 0;\r\n\r\n/**\r\n * @param {mixed} to\r\n * @param {string} id\r\n */\r\nfunction animateComment(to, id) { // eslint-disable-line no-unused-vars\r\n    if (ctCloseAnimate) {\r\n        if (to==0.3) {\r\n            jQuery('#comment-'+id).fadeTo(200, to, function() {\r\n                animateComment(1, id);\r\n            });\r\n        } else {\r\n            jQuery('#comment-'+id).fadeTo(200, to, function() {\r\n                animateComment(0.3, id);\r\n            });\r\n        }\r\n    } else {\r\n        ctCloseAnimate =true;\r\n    }\r\n}\r\n\r\n/**\r\n * clear comments\r\n */\r\nfunction ctClearComments() {\r\n    let from = 0; let till = 0;\r\n    if (jQuery('#ct_allow_date_range').is(':checked')) {\r\n        from = jQuery('#ct_date_range_from').val();\r\n        till = jQuery('#ct_date_range_till').val();\r\n    }\r\n    let ctSecure = location.protocol === 'https:' ? '; secure' : '';\r\n    document.cookie = 'apbct_check_comments_offset' + '=' + 0 + '; path=/; samesite=lax' + ctSecure;\r\n\r\n    let data = {\r\n        'action': 'ajax_clear_comments',\r\n        'security': ctAjaxNonce,\r\n        'from': from,\r\n        'till': till,\r\n    };\r\n\r\n    jQuery.ajax({\r\n        type: 'POST',\r\n        url: ajaxurl,\r\n        data: data,\r\n        success: function(msg) {\r\n            ctShowInfo();\r\n            ctSendComments();\r\n        },\r\n    });\r\n}\r\n\r\n/**\r\n * Continues the check after cooldown time\r\n * Called by ct_send_users();\r\n */\r\nfunction ctCoolingDownToggle() {\r\n    ctCoolingDownFlag = false;\r\n    ctSendComments();\r\n    ctShowInfo();\r\n}\r\n\r\n/**\r\n * send comments\r\n */\r\nfunction ctSendComments() {\r\n    if (ctCoolingDownFlag === true) {\r\n        return;\r\n    }\r\n\r\n    if (ctRequestsCounter >= ctMaxRequests) {\r\n        setTimeout(ctCoolingDownToggle, ctCoolDownTime);\r\n        ctRequestsCounter = 0;\r\n        ctCoolingDownFlag = true;\r\n        return;\r\n    } else {\r\n        ctRequestsCounter++;\r\n    }\r\n\r\n    let data = {\r\n        'action': 'ajax_check_comments',\r\n        'security': ctAjaxNonce,\r\n        'new_check': ctNewCheck,\r\n        'unchecked': ctUnchecked,\r\n        'offset': Number(ctGetCookie('apbct_check_comments_offset')),\r\n    };\r\n\r\n    if (ctAccurateCheck) {\r\n        data['accurate_check'] = true;\r\n    }\r\n\r\n    if (ctDateFrom && ctDateTill) {\r\n        data['from'] = ctDateFrom;\r\n        data['till'] = ctDateTill;\r\n    }\r\n\r\n    jQuery.ajax({\r\n        type: 'POST',\r\n        url: ajaxurl,\r\n        data: data,\r\n        success: function(msg) {\r\n            msg = jQuery.parseJSON(msg);\r\n\r\n            if (parseInt(msg.error)) {\r\n                ctWorking = false;\r\n                if (!confirm(msg.error_message+'. Do you want to proceed?')) {\r\n                    let newHref = 'edit-comments.php?page=ct_check_spam';\r\n                    if (ctDateFrom != 0 && ctDateTill != 0) {\r\n                        newHref+='&from='+ctDateFrom+'&till='+ctDateTill;\r\n                    }\r\n                    location.href = newHref;\r\n                } else {\r\n                    ctSendComments();\r\n                }\r\n            } else {\r\n                ctNewCheck = false;\r\n                let offset = Number(ctGetCookie('apbct_check_comments_offset')) + 100;\r\n\r\n                if (parseInt(msg.end) == 1 || ctPause === true) {\r\n                    if (parseInt(msg.end) == 1) {\r\n                        document.cookie = 'ct_paused_spam_check=0; path=/; samesite=lax';\r\n                    }\r\n                    ctWorking = false;\r\n                    jQuery('#ct_working_message').hide();\r\n                    let newHref = 'edit-comments.php?page=ct_check_spam';\r\n                    if (ctDateFrom != 0 && ctDateTill != 0) {\r\n                        newHref+='&from='+ctDateFrom+'&till='+ctDateTill;\r\n                    }\r\n\r\n                    document.cookie = 'apbct_check_comments_offset' + '=' + offset + '; path=/; samesite=lax'+ctSecure;\r\n\r\n                    location.href = newHref;\r\n                } else if (parseInt(msg.end) == 0) {\r\n                    ctCommentsChecked += msg.checked;\r\n                    ctCommentsSpam += msg.spam;\r\n                    ctCommentsBad += msg.bad;\r\n                    ctCommentsTotal += msg.total;\r\n                    ctUnchecked = ctCommentsTotal - ctCommentsChecked - ctCommentsBad;\r\n                    let statusString = String(ctCommentsCheck.ct_status_string);\r\n                    statusString = statusString.printf(ctCommentsChecked, ctCommentsSpam, ctCommentsBad);\r\n                    if (parseInt(ctCommentsSpam) > 0) {\r\n                        statusString += ctCommentsCheck.ct_status_string_warning;\r\n                    }\r\n                    jQuery('#ct_checking_status').html(statusString);\r\n                    jQuery('#ct_error_message').hide();\r\n                    // If DB woks not properly\r\n                    if (+ctCommentsTotal < ctCommentsChecked + ctCommentsBad) {\r\n                        document.cookie = 'ct_comments_start_check=1; path=/; samesite=lax';\r\n                        location.href = 'edit-comments.php?page=ct_check_spam';\r\n                    }\r\n\r\n                    document.cookie = 'apbct_check_comments_offset' + '=' + offset + '; path=/; samesite=lax'+ctSecure;\r\n\r\n                    ctSendComments();\r\n                }\r\n            }\r\n        },\r\n        error: function(jqXHR, textStatus, errorThrown) {\r\n            jQuery('#ct_error_message').show();\r\n            jQuery('#cleantalk_ajax_error').html(textStatus);\r\n            jQuery('#cleantalk_js_func').html('Check comments');\r\n            setTimeout(ctSendComments(), 3000);\r\n        },\r\n        timeout: 25000,\r\n    });\r\n}\r\n\r\n/**\r\n * show info\r\n */\r\nfunction ctShowInfo() {\r\n    if (ctWorking) {\r\n        if (ctCoolingDownFlag == true) {\r\n            jQuery('#ct_cooling_notice').html('Waiting for API to cool down. (About a minute)');\r\n            jQuery('#ct_cooling_notice').show();\r\n            return;\r\n        } else {\r\n            jQuery('#ct_cooling_notice').hide();\r\n        }\r\n\r\n        if (!ctCommentsTotal) {\r\n            let data = {\r\n                'action': 'ajax_info_comments',\r\n                'security': ctAjaxNonce,\r\n            };\r\n\r\n            if (ctDateFrom && ctDateTill) {\r\n                data['from'] = ctDateFrom;\r\n                data['till'] = ctDateTill;\r\n            }\r\n\r\n            jQuery.ajax({\r\n                type: 'POST',\r\n                url: ajaxurl,\r\n                data: data,\r\n                success: function(msg) {\r\n                    msg = jQuery.parseJSON(msg);\r\n                    jQuery('#ct_checking_status').html(msg.message);\r\n                    ctCommentsTotal = msg.total;\r\n                    ctCommentsSpam = msg.spam;\r\n                    ctCommentsChecked = msg.checked;\r\n                    ctCommentsBad = msg.bad;\r\n                },\r\n                error: function(jqXHR, textStatus, errorThrown) {\r\n                    jQuery('#ct_error_message').show();\r\n                    jQuery('#cleantalk_ajax_error').html(textStatus);\r\n                    jQuery('#cleantalk_js_func').html('Check comments');\r\n                    setTimeout(ctShowInfo(), 3000);\r\n                },\r\n                timeout: 15000,\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Function to toggle dependences\r\n *\r\n * @param {object} obj\r\n * @param {mixed} secondary\r\n */\r\nfunction ctToggleDepended(obj, secondary) { // eslint-disable-line no-unused-vars\r\n    secondary = secondary || null;\r\n\r\n    let depended = jQuery(obj.data('depended'));\r\n    let state = obj.data('state');\r\n\r\n    if (!state && !secondary) {\r\n        obj.data('state', true);\r\n        depended.removeProp('disabled');\r\n    } else {\r\n        obj.data('state', false);\r\n        depended.prop('disabled', true);\r\n        depended.removeProp('checked');\r\n        if (depended.data('depended')) {\r\n            ctToggleDepended(depended, true);\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * trash all\r\n *\r\n * @param {object} e\r\n */\r\nfunction ctTrashAll( e ) {\r\n    let data = {\r\n        'action': 'ajax_trash_all',\r\n        'security': ctAjaxNonce,\r\n    };\r\n\r\n    jQuery('.' + e.target.id).addClass('disabled');\r\n    jQuery('.spinner').css('visibility', 'visible');\r\n    jQuery.ajax({\r\n        type: 'POST',\r\n        url: ajaxurl,\r\n        data: data,\r\n        success: function( msg ) {\r\n            if ( msg > 0 ) {\r\n                jQuery('#cleantalk_comments_left').html(msg);\r\n                ctTrashAll( e );\r\n            } else {\r\n                jQuery('.' + e.target.id).removeClass('disabled');\r\n                jQuery('.spinner').css('visibility', 'hidden');\r\n                location.href='edit-comments.php?page=ct_check_spam';\r\n            }\r\n        },\r\n        error: function(jqXHR, textStatus, errorThrown) {\r\n            jQuery('#ct_error_message').show();\r\n            jQuery('#cleantalk_ajax_error').html(textStatus);\r\n            jQuery('#cleantalk_js_func').html('Check comments');\r\n            setTimeout(ctTrashAll( e ), 3000);\r\n        },\r\n        timeout: 25000,\r\n    });\r\n}\r\n\r\n/**\r\n * spam all\r\n *\r\n * @param {object} e\r\n */\r\nfunction ctSpamAll( e ) {\r\n    let data = {\r\n        'action': 'ajax_spam_all',\r\n        'security': ctAjaxNonce,\r\n    };\r\n\r\n    jQuery('.' + e.target.id).addClass('disabled');\r\n    jQuery('.spinner').css('visibility', 'visible');\r\n    jQuery.ajax({\r\n        type: 'POST',\r\n        url: ajaxurl,\r\n        data: data,\r\n        success: function( msg ) {\r\n            if ( msg > 0 ) {\r\n                jQuery('#cleantalk_comments_left').html(msg);\r\n                ctSpamAll( e );\r\n            } else {\r\n                jQuery('.' + e.target.id).removeClass('disabled');\r\n                jQuery('.spinner').css('visibility', 'hidden');\r\n                location.href='edit-comments.php?page=ct_check_spam';\r\n            }\r\n        },\r\n        error: function(jqXHR, textStatus, errorThrown) {\r\n            jQuery('#ct_error_message').show();\r\n            jQuery('#cleantalk_ajax_error').html(textStatus);\r\n            jQuery('#cleantalk_js_func').html('Check comments');\r\n            setTimeout(ctSpamAll( e ), 3000);\r\n        },\r\n        timeout: 25000,\r\n    });\r\n}\r\n\r\njQuery(document).ready(function() {\r\n    // Prev check parameters\r\n    if (ctPrevAccurate) {\r\n        jQuery('#ct_accurate_check').prop('checked', true);\r\n    }\r\n    if (ctPrevFrom) {\r\n        jQuery('#ct_allow_date_range').prop('checked', true).data('state', true);\r\n        jQuery('#ct_date_range_from').removeProp('disabled').val(ctPrevFrom);\r\n        jQuery('#ct_date_range_till').removeProp('disabled').val(ctPrevTill);\r\n    }\r\n\r\n    // Toggle dependences\r\n    jQuery('#ct_allow_date_range').on('change', function() {\r\n        document.cookie = 'ct_spam_dates_from='+ jQuery('#ct_date_range_from').val() +'; path=/; samesite=lax';\r\n        document.cookie = 'ct_spam_dates_till='+ jQuery('#ct_date_range_till').val() +'; path=/; samesite=lax';\r\n        if ( this.checked ) {\r\n            document.cookie = 'ct_spam_dates_allowed=1; path=/; samesite=lax';\r\n            jQuery('.ct_date').prop('checked', true).attr('disabled', false);\r\n        } else {\r\n            document.cookie = 'ct_spam_dates_allowed=0; path=/; samesite=lax';\r\n            jQuery('.ct_date').prop('disabled', true).attr('disabled', true);\r\n        }\r\n    });\r\n\r\n    jQuery.datepicker.setDefaults(jQuery.datepicker.regional['en']);\r\n    var dates = jQuery('#ct_date_range_from, #ct_date_range_till').datepicker( // eslint-disable-line no-var\r\n        {\r\n            dateFormat: 'M d yy',\r\n            maxDate: '+0D',\r\n            changeMonth: true,\r\n            changeYear: true,\r\n            showAnim: 'slideDown',\r\n            onSelect: function(selectedDate) {\r\n                let option = this.id == 'ct_date_range_from' ? 'minDate' : 'maxDate';\r\n                let instance = jQuery( this ).data( 'datepicker' );\r\n                let date = jQuery.datepicker.parseDate(\r\n                    instance.settings.dateFormat || jQuery.datepicker._defaults.dateFormat,\r\n                    selectedDate, instance.settings);\r\n                dates.not(this).datepicker('option', option, date);\r\n                document.cookie = 'ct_spam_dates_from='+ jQuery('#ct_date_range_from').val() +'; path=/; samesite=lax';\r\n                document.cookie = 'ct_spam_dates_till='+ jQuery('#ct_date_range_till').val() +'; path=/; samesite=lax';\r\n            },\r\n        },\r\n    );\r\n\r\n    // eslint-disable-next-line require-jsdoc\r\n    function ctStartCheck(continueCheck) {\r\n        continueCheck = continueCheck || null;\r\n\r\n        if (jQuery('#ct_allow_date_range').is(':checked')) {\r\n            ctDateFrom = jQuery('#ct_date_range_from').val();\r\n            ctDateTill = jQuery('#ct_date_range_till').val();\r\n\r\n            if (!(ctDateFrom != '' && ctDateTill != '')) {\r\n                alert('Please, specify a date range.');\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (jQuery('#ct_accurate_check').is(':checked')) {\r\n            ctAccurateCheck = true;\r\n        }\r\n\r\n        if (\r\n            jQuery('#ct_accurate_check').is(':checked') &&\r\n            ! jQuery('#ct_allow_date_range').is(':checked')\r\n        ) {\r\n            alert('Please, select a date range.');\r\n            return;\r\n        }\r\n\r\n        jQuery('.ct_to_hide').hide();\r\n        jQuery('#ct_working_message').show();\r\n        jQuery('#ct_preloader').show();\r\n        jQuery('#ct_pause').show();\r\n\r\n        ctWorking = true;\r\n\r\n        if (continueCheck) {\r\n            ctShowInfo();\r\n            ctSendComments();\r\n        } else {\r\n            ctClearComments();\r\n        }\r\n    }\r\n\r\n    // Check comments\r\n    jQuery('#ct_check_spam_button').click(function() {\r\n        document.cookie = 'ct_paused_spam_check=0; path=/; samesite=lax';\r\n        ctStartCheck(false);\r\n    });\r\n    jQuery('#ct_proceed_check_button').click(function() {\r\n        ctStartCheck(true);\r\n    });\r\n\r\n    // Pause the check\r\n    jQuery('#ct_pause').on('click', function() {\r\n        ctPause = true;\r\n        let ctCheck = {\r\n            'accurate': ctAccurateCheck,\r\n            'from': ctDateFrom,\r\n            'till': ctDateTill,\r\n        };\r\n        document.cookie = 'ct_paused_spam_check=' + JSON.stringify(ctCheck) + '; path=/; samesite=lax';\r\n    });\r\n\r\n\r\n    if (ctCommentsCheck.start === '1') {\r\n        document.cookie = 'ct_comments_start_check=0; expires=' + new Date(0).toUTCString() + '; path=/; samesite=lax';\r\n        jQuery('#ct_check_spam_button').click();\r\n    }\r\n\r\n    // Delete all spam comments\r\n    jQuery('.ct_trash_all').click(function( e ) {\r\n        if (!confirm(ctCommentsCheck.ct_confirm_trash_all)) {\r\n            return false;\r\n        }\r\n\r\n        ctTrashAll( e );\r\n    });\r\n\r\n    // Mark as spam all spam comments\r\n    jQuery('.ct_spam_all').click(function( e ) {\r\n        if (!confirm(ctCommentsCheck.ct_confirm_spam_all)) {\r\n            return false;\r\n        }\r\n\r\n        ctSpamAll( e );\r\n    });\r\n\r\n    /**\r\n     * Checked ct_accurate_check\r\n     */\r\n    jQuery('#ct_accurate_check').change(function() {\r\n        if (this.checked) {\r\n            jQuery('#ct_allow_date_range').prop('checked', true);\r\n            jQuery('.ct_date').prop('checked', true).attr('disabled', false);\r\n        }\r\n    });\r\n});\r\n\r\n\r\n/**\r\n * Get cookie by name\r\n * @param {string} name\r\n * @return {string|undefined}\r\n */\r\nfunction ctGetCookie(name) {\r\n    let matches = document.cookie.match(new RegExp(\r\n        '(?:^|; )' + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + '=([^;]*)',\r\n    ));\r\n    return matches ? decodeURIComponent(matches[1]) : undefined;\r\n}\r\n"],"names":["let","ctWorking","String","prototype","printf","formatted","this","arg","arguments","beforeFormatted","substring","indexOf","afterFormatted","length","ctNewCheck","ctCoolingDownFlag","ctCloseAnimate","ctAccurateCheck","ctPause","ctPrevAccurate","ctCommentsCheck","ct_prev_accurate","ctPrevFrom","ct_prev_from","ctPrevTill","ct_prev_till","ctCoolDownTime","ctRequestsCounter","ctMaxRequests","ctAjaxNonce","ct_ajax_nonce","ctCommentsTotal","ctCommentsChecked","ctCommentsSpam","ctCommentsBad","ctUnchecked","ctDateFrom","ctDateTill","animateComment","to","id","jQuery","fadeTo","ctClearComments","from","till","is","val","ctSecure","location","protocol","data","document","cookie","action","security","ajax","type","url","ajaxurl","success","msg","ctShowInfo","ctSendComments","ctCoolingDownToggle","setTimeout","new_check","unchecked","offset","Number","ctGetCookie","parseJSON","parseInt","error","confirm","error_message","newHref","href","end","hide","checked","spam","bad","total","statusString","ct_status_string","ct_status_string_warning","html","jqXHR","textStatus","errorThrown","show","timeout","message","ctToggleDepended","obj","secondary","depended","prop","removeProp","ctTrashAll","e","target","addClass","css","removeClass","ctSpamAll","name","matches","match","RegExp","replace","decodeURIComponent","undefined","ready","on","attr","datepicker","setDefaults","regional","dates","dateFormat","maxDate","changeMonth","changeYear","showAnim","onSelect","selectedDate","option","instance","date","parseDate","settings","_defaults","not","ctStartCheck","continueCheck","alert","click","ctCheck","accurate","JSON","stringify","start","Date","toUTCString","ct_confirm_trash_all","ct_confirm_spam_all","change"],"mappings":"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"}